parameters:
- name: env
  displayName: Target Environment
  default: dev3
  values:
  - test
  - sit
  - production
  - staging
  - dev3
  - validate
  - datamigrat
- name: validate
  displayName: check only?
  type: boolean
  default: true
- name: level
  displayName: Test Level
  default: RunLocalTests
  values:
  - RunLocalTests
  - NoTestRun
- name: delta
  displayName: Delta Type
  default: tag
  values:
  - branch
  - commit
  - tag
- name: ref
  displayName: Branch/Commit/Tag
  type: string

pr: none

trigger: none

stages:
- stage: DEPLOY_${{ parameters.env }}
  jobs:
  - deployment: ${{ parameters.env }}_Deployment # only alphanumeric plus underscores allowed, may not start with a number
    displayName: ${{ parameters.env }}_Deployment #friendly name
    variables:
    - group: sf_config #using variable group to store auth url for authentication to target org
    pool:
      vmImage: 'ubuntu-latest'
    # creates an environment if it doesnâ€™t exist
    environment: ${{ parameters.env }}
    strategy:
      # default deployment strategy
      runOnce:
        deploy:
          steps:
          #install sfdx and plugins
          - template: templates/sfdx-install.yml 
            parameters:
              installDeltaCli: true
          #authenticate to target
          - template: templates/sfdx-authenticate.yml 
            parameters:
              authUrl: $(${{ parameters.env }}_auth) 
              targetEnv: ${{ parameters.env }}
          - template: templates/sfdx-delta.yml 
            parameters:
              deltaMode: ${{ parameters.delta }}
              compareWith: ${{ parameters.ref }}
              testlevel: ${{ parameters.level }} 
          # check only
          - ${{ if eq(parameters.validate, true) }}:  
            - template: templates/sfdx-deploy.yml 
              parameters:
                targetEnv: ${{ parameters.env }}
                testlevel: ${{ parameters.level }} 
                option: '-c'
          # deployment proper
          - ${{ if eq(parameters.validate, false) }}:
            - template: templates/sfdx-deploy.yml 
              parameters:
                targetEnv: ${{ parameters.env }}
                testlevel: ${{ parameters.level }}
          

          